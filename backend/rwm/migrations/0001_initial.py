# Generated by Django 5.1.6 on 2025-07-03 08:39

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="WaterQuality_sampling_point_data",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "Sub_District",
                    models.CharField(db_column="Sub_District", max_length=100),
                ),
                (
                    "Sub_District_Code",
                    models.IntegerField(db_column="Sub_District_Code"),
                ),
                ("District_Code", models.IntegerField(db_column="District_Code")),
                ("s_no", models.FloatField(blank=True, db_column="S.No.", null=True)),
                ("sampling", models.CharField(db_column="Sampling", max_length=100)),
                (
                    "location",
                    models.CharField(
                        blank=True, db_column="Location", max_length=100, null=True
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        blank=True, db_column="STATUS", max_length=50, null=True
                    ),
                ),
                ("latitude", models.FloatField(db_column="LATITUDE")),
                ("longitude", models.FloatField(db_column="LONGITUDE")),
                ("ph", models.FloatField(db_column="pH")),
                ("temperature", models.FloatField(db_column="Temperature(°C)")),
                ("ec", models.FloatField(db_column="EC(μS/cm)")),
                ("tds", models.FloatField(db_column="TDS(mg/L)")),
                ("tss", models.FloatField(db_column="TSS(mg/l)")),
                ("ts", models.FloatField(blank=True, db_column="TS(mg/L)", null=True)),
                ("do", models.FloatField(db_column="DO(mg/L)")),
                ("turbidity", models.FloatField(db_column="Turbidity(FNU)")),
                ("orp", models.FloatField(db_column="ORP")),
                ("cod", models.FloatField(db_column="COD(mg/L)")),
                ("bod", models.FloatField(db_column="BOD(mg/l)")),
                ("chloride", models.FloatField(db_column="Chloride(mg/l)")),
                (
                    "nitrate",
                    models.FloatField(blank=True, db_column="Nitrate(mg/L)", null=True),
                ),
                ("hardness", models.FloatField(db_column="Hardness(mg/l)")),
                (
                    "faecal_coliform",
                    models.CharField(
                        blank=True,
                        db_column="Faecal Coliform(CFU/100 mL)",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "total_coliform",
                    models.CharField(
                        blank=True,
                        db_column="Total Coliform (CFU/100 mL)",
                        max_length=50,
                        null=True,
                    ),
                ),
            ],
            options={
                "db_table": "sampling_point_data",
            },
        ),
    ]
